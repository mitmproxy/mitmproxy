#!/usr/bin/env python

# Copyright (C) 2010  Aldo Cortesi
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
from libmproxy import proxy, console, cmdline
from libmproxy.version import VERSION
from optparse import OptionParser, OptionGroup


if __name__ == '__main__':
    parser = OptionParser(
                usage = "%prog [options]",
                version="%%prog %s"%VERSION,
            )
    cmdline.common_options(parser)
    parser.add_option("--debug", dest="debug", default=False, action="store_true")


    group = OptionGroup(
                        parser,
                        "Filters",
                        "See help in mitmproxy for filter expression syntax."
                    )
    group.add_option(
        "-l", "--limit", action="store",
        type = "str", dest="limit", default=None,
        help = "Limit filter expression."
    )
    group.add_option(
        "-i", "--intercept", action="store",
        type = "str", dest="intercept", default=None,
        help = "Intercept filter expression."
    )
    parser.add_option_group(group)
    options, args = parser.parse_args()

    config = proxy.process_certificate_option_group(parser, options)

    if options.no_server:
        server = None
    else:
        try:
            server = proxy.ProxyServer(config, options.port, options.addr)
        except proxy.ProxyServerError, v:
            print >> sys.stderr, "mitmproxy:", v.args[0]
            sys.exit(1)

    opts = console.Options(**cmdline.get_common_options(options))
    opts.intercept = options.intercept
    opts.limit = options.limit
    opts.debug = options.debug
    m = console.ConsoleMaster(server, opts)

    m.run()


