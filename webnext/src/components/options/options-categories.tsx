import type { ReactNode } from "react";
import {
  LuBug,
  LuGlobe,
  LuHardDrive,
  LuLink,
  LuLock,
  LuPencil,
  LuPointer,
  LuRotateCcw,
} from "react-icons/lu";
import { GrHalt } from "react-icons/gr";
import type { Option } from "web/ducks/_options_gen";

export type SettingCategory = {
  id: string;
  label: string;
  description: string;
  icon: ReactNode;
  options: Option[];
};

export const settingsCategories: SettingCategory[] = [
  {
    id: "network",
    label: "Connections",
    description: "Configure network settings and connection behavior",
    icon: <LuGlobe className="text-blue-500 dark:text-blue-300" />,
    options: [
      "listen_host",
      "listen_port",
      "connection_strategy",
      "connect_addr",
      "upstream_auth",
      "upstream_cert",
      "dns_name_servers",
      "dns_use_hosts_file",
    ],
  },
  {
    id: "security",
    label: "TLS",
    description: "Manage certificates, TLS settings, and security options",
    icon: <LuLock className="text-green-500 dark:text-green-300" />,
    options: [
      "ssl_insecure",
      "ssl_verify_upstream_trusted_ca",
      "ssl_verify_upstream_trusted_confdir",
      "tls_version_client_max",
      "tls_version_client_min",
      "tls_version_server_max",
      "tls_version_server_min",
      "tls_ecdh_curve_client",
      "tls_ecdh_curve_server",
      "certs",
      "cert_passphrase",
      "client_certs",
      "request_client_cert",
      "key_size",
      "ciphers_client",
      "ciphers_server",
      "add_upstream_certs_to_client_chain",
      "strip_ech",
    ],
  },
  {
    id: "protocols",
    label: "Protocols",
    description: "Configure HTTP versions and protocol-specific settings",
    icon: <LuLink className="text-gray-500 dark:text-gray-300" />,
    options: [
      "http2",
      "http2_ping_keepalive",
      "http3",
      "websocket",
      "rawtcp",
      "http_connect_send_host_header",
      "keep_alt_svc_header",
      "keep_host_header",
      "normalize_outbound_headers",
      "validate_inbound_headers",
    ],
  },
  {
    id: "filtering",
    label: "Filters",
    description: "Control traffic filtering, blocking, and interception",
    icon: <GrHalt className="text-yellow-500 dark:text-yellow-300" />,
    options: [
      "intercept",
      "intercept_active",
      "block_global",
      "block_private",
      "block_list",
      "allow_hosts",
      "ignore_hosts",
      "show_ignored_hosts",
      "tcp_hosts",
      "udp_hosts",
      "view_filter",
      "readfile_filter",
    ],
  },
  {
    id: "modification",
    label: "Modifications",
    description: "Modify requests, responses, and content on-the-fly",
    icon: <LuPencil className="text-purple-500 dark:text-purple-300" />,
    options: [
      "modify_headers",
      "modify_body",
      "map_local",
      "map_remote",
      "anticache",
      "anticomp",
      "stickyauth",
      "stickycookie",
    ],
  },
  {
    id: "replay",
    label: "Replays",
    description: "Configure request/response replay and recording options",
    icon: <LuRotateCcw className="text-green-700 dark:text-green-500" />,
    options: [
      "server_replay",
      "server_replay_extra",
      "server_replay_ignore_content",
      "server_replay_ignore_host",
      "server_replay_ignore_params",
      "server_replay_ignore_payload_params",
      "server_replay_ignore_port",
      "server_replay_kill_extra",
      "server_replay_nopop",
      "server_replay_refresh",
      "server_replay_reuse",
      "server_replay_use_headers",
      "client_replay",
      "client_replay_concurrency",
      "rfile",
    ],
  },
  {
    id: "web",
    label: "Web interface",
    description: "Customize the web interface and user experience",
    icon: <LuPointer className="text-pink-500 dark:text-pink-300" />,
    options: [
      "web_host",
      "web_port",
      "web_password",
      "web_open_browser",
      "web_debug",
      "web_static_viewer",
      "web_columns",
      "web_theme",
      "onboarding",
      "onboarding_host",
      "view_order",
      "view_order_reversed",
      "console_focus_follow",
      "content_view_lines_cutoff",
    ],
  },
  {
    id: "storage",
    label: "Storage",
    description: "Configure file storage and streaming behavior",
    icon: <LuHardDrive className="text-amber-900 dark:text-amber-700" />,
    options: [
      "save_stream_file",
      "save_stream_filter",
      "store_streamed_bodies",
      "stream_large_bodies",
      "body_size_limit",
      "hardump",
      "confdir",
    ],
  },
  {
    id: "advanced",
    label: "Debug",
    description: "Advanced configuration and debugging options",
    icon: <LuBug className="text-red-400 dark:text-red-300" />,
    options: [
      "proxy_debug",
      "termlog_verbosity",
      "command_history",
      "server",
      "mode",
      "scripts",
      "protobuf_definitions",
      "proxyauth",
      "showhost",
      "export_preserve_original_ip",
    ],
  },
];
