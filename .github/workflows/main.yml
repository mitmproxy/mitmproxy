name: CI

on: [push, pull_request, create]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: TrueBrain/actions-flake8@v1.2
  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v1
    - uses: actions/checkout@v1
    - name: Run mypy
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        mypy .
  test:
    strategy:
      fail-fast: false  # FIXME
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - if: matrix.os != 'windows-latest'
      uses: actions/setup-python@v1
    - if: matrix.os == 'windows-latest'
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x86'  # FIXME: cryptography update
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - run: mitmdump --version
    - name: Test with pytest
      run: |
        pytest --timeout 60 --cov-report=xml --cov=mitmproxy --cov=pathod --full-cov=mitmproxy/ --full-cov=pathod/
    - run: codecov
  deploy:
    strategy:
      fail-fast: false  # FIXME
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - if: "!startsWith(runner.os, 'Windows')"
      uses: actions/setup-python@v1
    - if: startsWith(runner.os, 'Windows')
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x86'  # FIXME: cryptography update
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - run: |
        tox -e cibuild -- build
        tox -e cibuild -- upload
    
  printenv:
    runs-on: ubuntu-latest
    steps:
      - run: printenv
      - run: echo $GITHUB_REF
      - run env
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"